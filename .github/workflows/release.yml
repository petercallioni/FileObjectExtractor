name: Create Release with Build Output

on:
  push:
    tags:
      - 'v*' # Trigger on version tags like v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Build the project
      - name: Build project
        run: dotnet build --configuration Release

      # Publish build artifacts
      - name: Publish build artifacts
        run: dotnet publish --configuration Release --output ./output

      # Archive compiled output
      - name: Create zip file
        run: zip -r FileObjectExtractor.zip ./output

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Upload build artifacts to GitHub release
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Automatically generated release for version ${{ github.ref_name }}.
          draft: false
          prerelease: false

      # Upload artifact to the release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./FileObjectExtractor.zip
          asset_name: FileObjectExtractor.zip
          asset_content_type: application/zip