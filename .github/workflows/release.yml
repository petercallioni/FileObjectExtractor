name: Create Release with Build Output

on:
  push:
    tags:
      - 'v*'  # Trigger on tags like v1.0.0

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build main project
        run: dotnet build FileObjectExtractor/FileObjectExtractor.csproj --configuration Release

      - name: Publish main project
        run: dotnet publish FileObjectExtractor/FileObjectExtractor.csproj --configuration Release --output ./output

      - name: Create zip file of published output
        run: zip -r FileObjectExtractor.zip ./output

      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-zip
          path: ./FileObjectExtractor.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download release artifact
        uses: actions/download-artifact@v3
        with:
          name: release-zip
          path: .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          token: ${{ secrets.RELEASE_PAT }}
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Automatically generated release for version ${{ github.ref_name }}.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: FileObjectExtractor.zip
          asset_name: FileObjectExtractor.zip
          asset_content_type: application/zip