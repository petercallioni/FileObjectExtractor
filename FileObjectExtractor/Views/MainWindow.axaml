<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:vm="using:FileObjectExtractor.ViewModels"
		xmlns:design="using:FileObjectExtractor.ViewModels.Design"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:conv="using:FileObjectExtractor.Converters"
		mc:Ignorable="d" d:DesignWidth="1500" d:DesignHeight="450"
		xmlns:custom="using:FileObjectExtractor.Components"
		xmlns:uc="using:FileObjectExtractor.Views.Controls"
        x:Class="FileObjectExtractor.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/fox.png"
        Title="File Object Extractor">

	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<design:DesignMainViewModel/>
	</Design.DataContext>

	<Window.Resources>
		<conv:ByteSizeConverter x:Key="ByteSizeConverter"/>
		<conv:FileStringConverter x:Key="FileStringConverter"/>
		<conv:FileNameShortener x:Key="FileNameShortener"/>
		<conv:DisplayWarningsConverter x:Key="DisplayWarningsConverter"/>
		<conv:ShowWarningsConverter x:Key="ShowWarningsConverter"/>
		<conv:EnumToBoolConverter x:Key="EnumToBoolConverter"/>
		<conv:EnumToBoolConverter x:Key="EnumToBoolConverterNegated" Negate="True"/>
		<conv:ProgressTextColourConverter x:Key="ProgressTextColourConverter"/>

		<ControlTheme x:Key="DropArea" TargetType="TextBox">
			<Setter Property="Foreground" Value="Gray"/>
			<Setter Property="FontSize" Value="22"/>
			<Setter Property="HorizontalAlignment" Value="Stretch" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="TextWrapping" Value="Wrap" />
			<Setter Property="IsReadOnly" Value="True" />
			<Setter Property="Margin" Value="40" />
			<Setter Property="Padding" Value="0,40,0,40" />
			<Setter Property="Template">
				<ControlTemplate>
					<Grid>
						<!-- Rectangle acting as a dotted border -->
						<!--<Rectangle
						  Stroke="{Binding InputFile.OfficeColour, Mode=OneWay}"
						  StrokeThickness="3"
						  RadiusX="20"
						  RadiusY="20"
						  StrokeDashArray="5,1">
						</Rectangle>-->
						<!-- Text presenter for content -->
						<TextPresenter
						  x:Name="PART_TextPresenter"
						  Text="{TemplateBinding Text}"
						  Margin="{TemplateBinding Margin}"
						  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Grid>
				</ControlTemplate>
			</Setter>
		</ControlTheme>
	</Window.Resources>

	<Window.Styles>
		<Style Selector="TextBlock.H1">
			<Setter	Property="Foreground" Value="Black"/>
			<Setter Property="FontSize" Value="16"/>
		</Style>

		<Style Selector="Button.SelectFile">
			<Setter Property="Width" Value="40"/>
			<Setter Property="Height" Value="40"/>
			<Setter Property="Padding" Value="3"/>
		</Style>

		<Style Selector="Button.Toggle">
			<Setter Property="Width" Value="30"/>
			<Setter Property="Height" Value="30"/>

			<Setter	Property="HorizontalContentAlignment" Value="Center"/>
			<Setter	Property="VerticalContentAlignment" Value="Center"/>
		</Style>

		<Style Selector="Button">
			<Setter Property="Background" Value="Transparent"/>
		</Style>

		<Style Selector="Rectangle.VerticalSeperator">
			<Setter	Property="Width" Value="1" />
			<Setter	Property="VerticalAlignment" Value="Stretch" />
			<Setter	Property="Fill" Value="LightGray"/>
			<Setter	Property="Margin" Value="10,0,10,0"/>
		</Style>

		<Style Selector="TextBlock.ControlExplanation">
			<Setter Property="FontSize" Value="10"/>
			<Setter	Property="Margin" Value="0,0,0,4"/>
			<Setter	Property="Padding" Value="0"/>
			<Setter	Property="HorizontalAlignment" Value="Center"/>
		</Style>

		<Style Selector="Button.SortButton">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Padding" Value="2"/>
			<Setter Property="FontSize" Value="8"/>
			<Setter	Property="Margin" Value="1,0,5,0"/>
		</Style>

		<Style Selector="Button.SortButtonSelected">
			<Setter Property="Background" Value="Black"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="Padding" Value="2"/>
			<Setter Property="FontSize" Value="8"/>
			<Setter	Property="Margin" Value="1,0,5,0"/>
		</Style>

		<Style Selector="Button.SortButtonSelected:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="DarkGray"/>
			<Setter Property="Foreground" Value="White"/>
		</Style>
	</Window.Styles>

	<DockPanel LastChildFill="True">
		<Menu DockPanel.Dock="Top"
			  BorderBrush="LightGray"
			  BorderThickness="0,0,0,1">
			<MenuItem Header="_File">
				<MenuItem Header="_Exit" Command="{Binding MainMenu.ExitCommand}" />
			</MenuItem>
			<MenuItem Header="_Select">
				<MenuItem Header="_Open" Command="{Binding SelectFileCommand}" />
				<MenuItem Header="_Export Selected" Command="{Binding SaveSelectedCommand}"/>
				<Separator/>
				<MenuItem Header="_All" Command="{Binding SelectAllCommand}" />
				<MenuItem Header="_None" Command="{Binding SelectNoneCommand}" />
			</MenuItem>
			<MenuItem Header="_Help">
				<MenuItem Header="_About" Command="{Binding MainMenu.AboutCommand}" />
			</MenuItem>
		</Menu>
		<Panel Margin="10" Width="400">
			<DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" LastChildFill="True">
				<StackPanel DockPanel.Dock="Top" Margin="5,5,0,5" Orientation="Horizontal">
					<TextBlock Classes="H1" VerticalAlignment="Center" Margin="0,0,5,0">Select File:</TextBlock>
					<Button Classes="SelectFile" Command="{Binding SelectFileCommand}">
						<Button.Content>
							<Svg Stretch="UniformToFill" Path="/Assets/select-file-icon.svg"/>
						</Button.Content>
					</Button>
				</StackPanel>

				<Border VerticalAlignment="Stretch" BorderBrush="{Binding InputFile.OfficeColour, Mode=OneWay}" BorderThickness="2" CornerRadius="10" DragDrop.AllowDrop="True" Background="Transparent">
					<TextBox
						Theme="{StaticResource DropArea}"
						Text="{Binding InputFile.FileURI, Mode=OneWay, Converter={StaticResource FileStringConverter}}"
						TextBlock.TextAlignment="Center">
					</TextBox>
				</Border>
			</DockPanel>
		</Panel>
		<DockPanel DockPanel.Dock="Right" LastChildFill="True">
			<DockPanel LastChildFill="True">
				<DockPanel DockPanel.Dock="Top" Margin="0,10,0,0">
					<StackPanel Orientation="Vertical" VerticalAlignment="Center">
						<TextBlock Text="Select" Classes="ControlExplanation"/>
						<StackPanel Orientation="Horizontal">
							<Button Classes="Toggle"
									Command="{Binding SelectNoneCommand}"
									Padding="0"
									ToolTip.Tip="Select None">
								<Svg Stretch="Uniform" Path="/Assets/select-none.svg" />
							</Button>

							<Button Classes="Toggle"
									Command="{Binding SelectAllCommand}"
									Padding="0"
									ToolTip.Tip="Select All">
								<Svg Stretch="Uniform" Path="/Assets/select-all.svg" />
							</Button>
						</StackPanel>
					</StackPanel>

					<Rectangle Classes ="VerticalSeperator"/>

					<StackPanel Orientation="Vertical" VerticalAlignment="Center">
						<TextBlock Text="Sort" Classes="ControlExplanation"/>
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="Document Order" VerticalAlignment="Center"/>
							<StackPanel Orientation="Vertical" VerticalAlignment="Center">
								<Button
									Classes.SortButton="{Binding SortOrder, Converter={StaticResource EnumToBoolConverterNegated}, ConverterParameter={x:Static vm:SortOrder.DOCUMENT}}"
									Classes.SortButtonSelected="{Binding SortOrder, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static vm:SortOrder.DOCUMENT}}"
										Content="▲"
										ToolTip.Tip="Ascending"
										Command="{Binding SelectSortCommand}"
										CommandParameter="{x:Static vm:SortOrder.DOCUMENT}"/>
								<Button
									Classes.SortButton="{Binding SortOrder, Converter={StaticResource EnumToBoolConverterNegated}, ConverterParameter={x:Static vm:SortOrder.DOCUMENT_DESC}}"
									Classes.SortButtonSelected="{Binding SortOrder, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static vm:SortOrder.DOCUMENT_DESC}}"
										Content="▼"
										ToolTip.Tip="Descending"
										Command="{Binding SelectSortCommand}"
										CommandParameter="{x:Static vm:SortOrder.DOCUMENT_DESC}"/>
							</StackPanel>
							<TextBlock Text="Alphabetically" VerticalAlignment="Center"/>
							<StackPanel Orientation="Vertical" VerticalAlignment="Center">
								<Button
									Classes.SortButton="{Binding SortOrder, Converter={StaticResource EnumToBoolConverterNegated}, ConverterParameter={x:Static vm:SortOrder.ALPHABETICAL}}"
									Classes.SortButtonSelected="{Binding SortOrder, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static vm:SortOrder.ALPHABETICAL}}"
										Content="▲" ToolTip.Tip="Ascending"
										Command="{Binding SelectSortCommand}"
										CommandParameter="{x:Static vm:SortOrder.ALPHABETICAL}"/>
								<Button
									Classes.SortButton="{Binding SortOrder, Converter={StaticResource EnumToBoolConverterNegated}, ConverterParameter={x:Static vm:SortOrder.ALPHABETICAL_DESC}}"
									Classes.SortButtonSelected="{Binding SortOrder, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static vm:SortOrder.ALPHABETICAL_DESC}}"
									Content="▼"
									ToolTip.Tip="Descending"
									Command="{Binding SelectSortCommand}"
									CommandParameter="{x:Static vm:SortOrder.ALPHABETICAL_DESC}"/>
							</StackPanel>
							<TextBlock Text="Size" VerticalAlignment="Center"/>
							<StackPanel Orientation="Vertical" VerticalAlignment="Center">
								<Button
									Classes.SortButton="{Binding SortOrder, Converter={StaticResource EnumToBoolConverterNegated}, ConverterParameter={x:Static vm:SortOrder.SIZE}}"
									Classes.SortButtonSelected="{Binding SortOrder, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static vm:SortOrder.SIZE}}"
										Content="▲" ToolTip.Tip="Ascending"
										Command="{Binding SelectSortCommand}"
										CommandParameter="{x:Static vm:SortOrder.SIZE}"/>
								<Button
									Classes.SortButton="{Binding SortOrder, Converter={StaticResource EnumToBoolConverterNegated}, ConverterParameter={x:Static vm:SortOrder.SIZE_DESC}}"
									Classes.SortButtonSelected="{Binding SortOrder, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static vm:SortOrder.SIZE_DESC}}"
									Content="▼"
									ToolTip.Tip="Descending"
									Command="{Binding SelectSortCommand}"
									CommandParameter="{x:Static vm:SortOrder.SIZE_DESC}"/>
							</StackPanel>
						</StackPanel>
					</StackPanel>

					<Rectangle Classes ="VerticalSeperator"/>

					<TextBox Width="200" Watermark="Filter" VerticalContentAlignment="Center"
							 Text="{Binding Filter, Mode=TwoWay}"/>

					<Button Height="40" Margin="10,0,0,0"
							ToolTip.Tip="Save all selected file names with names as shown. If a file already exists, it will have a number appended to the name."
							IsEnabled="{Binding HasSelectedItems}"
							Command="{Binding SaveSelectedCommand}">
						<Button.Content>
							<StackPanel Orientation="Horizontal">
								<TextBlock VerticalAlignment="Center">Save Selected</TextBlock>
								<Svg Margin="10,0,0,0" Stretch="UniformToFill" Path="/Assets/save-icon.svg"/>
							</StackPanel>
						</Button.Content>
					</Button>

					<Panel>
						<Svg Width="40"
							 VerticalAlignment="Center"
							Path="/Assets/warning.svg"
							 ToolTip.Tip="One or more items have warnings. They may save with unexpected file names."
							 IsVisible="{Binding SelectedFilesContainWarnings}"/>
					</Panel>

					<CheckBox
						Margin="0,0,15,0"
						HorizontalAlignment="Right"
						IsChecked="{Binding TrustToOpenFiles, Mode=TwoWay}">
						<TextBlock>
							<Run>I Trust The Author</Run>
							<LineBreak/>
							<Run>Allow Opening of Files</Run>
						</TextBlock>
					</CheckBox>
				</DockPanel>

				<Panel
					Margin="0,0,10,10"
					DockPanel.Dock="Bottom"
					IsVisible="{Binding ProgressIndicator.ShowProgress}">
					<ProgressBar
						HorizontalAlignment="Stretch"
						Height="23"
						Value="{Binding ProgressIndicator.Progress}"
						Background="LightGray"
						Foreground="{Binding InputFile.OfficeColour, Mode=OneWay}"
						Maximum="{Binding ProgressIndicator.MaxProgress}"/>

					<TextBlock
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						FontSize="0.1"
						Foreground="{Binding ProgressIndicator.Progress, Converter={StaticResource ProgressTextColourConverter}}, ConverterParameter={Binding ProgressIndicator.MaxProgress}">
						<TextBlock.Inlines>
							<Run FontSize="14" Text="{Binding ProgressIndicator.Message}"/>
							<Run FontSize="14" Text=" ("/>
							<Run FontSize="14" Text="{Binding ProgressIndicator.Progress}"/>
							<Run FontSize="14" Text="/"/>
							<Run FontSize="14" Text="{Binding ProgressIndicator.MaxProgress}"/>
							<Run FontSize="14" Text=")"/>
						</TextBlock.Inlines>
					</TextBlock>
				</Panel>

				<Border BorderBrush="{Binding InputFile.OfficeColour, Mode=OneWay}" BorderThickness="1" CornerRadius="10" Background="{Binding InputFile.OfficeColour, Mode=OneWay}" Margin="0,10,10,10" Padding="10,10,10,10" DockPanel.Dock="Bottom">
					<Panel>
						<Panel IsVisible="{Binding IsLoadingFile}">
							<uc:LoadingControl Width="200"/>
						</Panel>
						<ListBox ItemsSource="{Binding FilteredExtractedFiles}" SelectionMode="Multiple" IsVisible="{Binding !IsLoadingFile}">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<DockPanel LastChildFill="True" IsVisible="{Binding IsVisible}">
										<CheckBox
											IsEnabled="{Binding !ExtractedFile.IsLinkedFile}"
											IsChecked="{Binding IsSelected, Mode=TwoWay}"/>
										<Button
											Background="Transparent" Padding="3"
											IsVisible="{Binding NameChanged}"
											ToolTip.Tip="{Binding ResetToolTip}"
											Command="{Binding ResetCommand}">
											<Button.Content>
												<StackPanel Orientation="Horizontal">
													<Svg Stretch="UniformToFill" Path="/Assets/reset.svg"/>
												</StackPanel>
											</Button.Content>
										</Button>
										<StackPanel Orientation="Horizontal">
											<Border
												Background="Transparent"
												Margin="0,0,5,0"
												CornerRadius="10"
												Padding="2"
												IsVisible="{Binding ExtractedFile.FileNameWarnings, Converter={StaticResource ShowWarningsConverter}}" ToolTip.Tip="{Binding ExtractedFile.FileNameWarnings, Converter={StaticResource DisplayWarningsConverter}}">
												<Svg Width="30" Path="/Assets/warning.svg" />
											</Border>
										</StackPanel>

										<Button
											DockPanel.Dock="Right"
											IsEnabled="{Binding !ExtractedFile.IsLinkedFile}"
											Background="Transparent"
											Padding="3,3,3,3"
											HorizontalAlignment="Right"
											ToolTip.Tip="Save file, choosing the file name"
											Command="{Binding SaveFileCommand}"
											Margin="5,0,0,0"

											Width="120">
											<Button.Content>
												<DockPanel>
													<TextBlock VerticalAlignment="Center" Margin="0,0,10,0" Text="{Binding ExtractedFile.EmbeddedFile, Converter={StaticResource ByteSizeConverter}}"/>
													<Svg HorizontalAlignment="Right" Stretch="UniformToFill" Path="/Assets/save-icon.svg" Width="25"/>
												</DockPanel>
											</Button.Content>
										</Button>
										<Button
											Background="Transparent" Padding="0"
											IsEnabled="{Binding CanOpen}"
											Margin="5,0,0,0"
											ToolTip.Tip="Open with default application. Exercise caution."
											Command="{Binding OpenFileCommand}"
											DockPanel.Dock="Right">
											<Button.Content>
												<StackPanel Orientation="Horizontal">
													<Svg Stretch="UniformToFill"
														 Path="/Assets/open.svg"
														 Width="30"/>
												</StackPanel>
											</Button.Content>
										</Button>
										<TextBox
											VerticalAlignment="Center"
											Margin="5,0,0,0"
											Text="{Binding FileName, Mode=TwoWay}">
										</TextBox>
									</DockPanel>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>
					</Panel>
				</Border>
			</DockPanel>
		</DockPanel>
	</DockPanel>
</Window>
